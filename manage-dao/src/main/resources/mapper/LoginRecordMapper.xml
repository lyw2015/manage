<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozf.laiyw.manage.dao.mapper.LoginRecordMapper">

    <resultMap id="loginRecordMap" type="com.ozf.laiyw.manage.model.LoginRecord">
        <id property="id" column="lr_id"/>
        <result property="sessionId" column="session_id"/>
        <result property="userAccount" column="user_account"/>
        <result property="userName" column="user_name"/>
        <result property="visitTime" column="visit_time"/>
        <result property="lastTime" column="last_time"/>
        <result property="loginTime" column="login_time"/>
        <result property="logoutTime" column="logout_time"/>
        <result property="onlineTime" column="online_time"/>
        <result property="online" column="lr_online"/>
        <result property="clientIp" column="client_ip"/>
        <result property="deviceType" column="device_type"/>
        <result property="groupName" column="group_name"/>
        <result property="operatingSystemName" column="operating_system_name"/>
        <result property="browser" column="browser"/>
    </resultMap>


    <insert id="saveLoginRecord" parameterType="com.ozf.laiyw.manage.model.LoginRecord">
        insert into t_sys_monitor_login_record(
          lr_id,
          session_id,
          user_account,
          user_name,
          visit_time,
          last_time,
          login_time,
          logout_time,
          online_time,
          lr_online,
          client_ip,
          device_type,
          group_name,
          operating_system_name,
          browser
        )
        values(
          #{id, jdbcType=VARCHAR},
          #{sessionId , jdbcType=VARCHAR},
          #{userAccount , jdbcType=VARCHAR},
          #{userName , jdbcType=VARCHAR},
          #{visitTime , jdbcType=VARCHAR},
          #{lastTime, jdbcType=VARCHAR},
          #{loginTime , jdbcType=VARCHAR},
          #{logoutTime , jdbcType=VARCHAR},
          #{onlineTime, jdbcType=VARCHAR},
          #{online, jdbcType=VARCHAR},
          #{clientIp, jdbcType=VARCHAR},
          #{deviceType, jdbcType=VARCHAR},
          #{groupName, jdbcType=VARCHAR},
          #{operatingSystemName, jdbcType=VARCHAR},
          #{browser, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateLoginRecord" parameterType="com.ozf.laiyw.manage.model.LoginRecord">
        update t_sys_monitor_login_record
        <set>
            <if test="online != null and online != ''">
                lr_online = #{online , jdbcType=VARCHAR},
            </if>
            <if test="lastTime != null and lastTime != ''">
                last_time = #{lastTime , jdbcType=VARCHAR},
            </if>
            <if test="logoutTime != null and logoutTime != ''">
                logout_time = #{logoutTime , jdbcType=VARCHAR},
            </if>
            <if test="onlineTime != null and onlineTime != ''">
                online_time = #{onlineTime , jdbcType=VARCHAR},
            </if>
        </set>
        where session_id = #{sessionId, jdbcType=VARCHAR} and lr_online = 'true'
    </update>

    <update id="updateLoginRecordSessionIdBySessionId">
        update t_sys_monitor_login_record set session_id = #{newSessionId} where session_id = #{oldSessionId}
    </update>

    <select id="findLoginRecordBySessionId" resultMap="loginRecordMap">
        select * from t_sys_monitor_login_record where session_id = #{sessionId} and lr_online = 'true'
    </select>

    <select id="findLoginRecordByCond" resultMap="loginRecordMap">
        select * from t_sys_monitor_login_record where lr_online = 'true' and client_ip = #{clientIp} and operating_system_name = #{operatingSystemName} and browser = #{browser}
    </select>

    <select id="onlineUser" resultMap="loginRecordMap">
        select * from t_sys_monitor_login_record where lr_online = 'true'
        <if test="userName != null and userName != ''">
            <bind name="pattern" value="'%' + userName + '%'"/>
            and (user_name like #{pattern} or user_account like #{pattern})
        </if>
        <if test="clientIp != null and clientIp != ''">
            <bind name="pattern" value="'%' + clientIp + '%'"/>
            and client_ip like #{pattern}
        </if>
        <if test="deviceType != null and deviceType != ''">
            <bind name="pattern" value="'%' + deviceType + '%'"/>
            and device_type like #{pattern}
        </if>
        <if test="loginTime != null and loginTime != ''">
            and date_format(login_time, '%Y-%m-%d %H:%i') <![CDATA[ >= ]]> date_format(#{sd}, '%Y-%m-%d %H:%i')
            and date_format(login_time, '%Y-%m-%d %H:%i') <![CDATA[ <= ]]> date_format(#{ed}, '%Y-%m-%d %H:%i')
        </if>
        order by visit_time desc
    </select>

    <select id="countOnline" resultType="java.lang.Integer">
        select count(0) from t_sys_monitor_login_record where lr_online = 'true'
    </select>

    <!--
        TODO
        根据用户账号，登录IP进行统计
        user_account,client_ip,operating_system_name,browser
    -->
    <select id="countTodayTuest" resultType="java.lang.Integer">
        select count(0) from (
          select count(0) from t_sys_monitor_login_record where last_time like concat(date_format(now(), '%Y-%m-%d'), '%')
              group by user_account,client_ip
        ) counttemp
    </select>

    <select id="guestRecord" resultMap="loginRecordMap">
        select * from t_sys_monitor_login_record
        <where>
            <if test="userName != null and userName != ''">
                <bind name="pattern" value="'%' + userName + '%'"/>
                and (user_name like #{pattern} or user_account like #{pattern})
            </if>
            <if test="clientIp != null and clientIp != ''">
                <bind name="pattern" value="'%' + clientIp + '%'"/>
                and client_ip like #{pattern}
            </if>
            <if test="operatingSystemName != null and operatingSystemName != ''">
                <bind name="pattern" value="'%' + operatingSystemName + '%'"/>
                and operating_system_name like #{pattern}
            </if>
            <if test="browser != null and browser != ''">
                <bind name="pattern" value="'%' + browser + '%'"/>
                and browser like #{pattern}
            </if>
            <if test="loginTime != null and loginTime != ''">
                and date_format(login_time, '%Y-%m-%d %H:%i') <![CDATA[ >= ]]> date_format(#{sd}, '%Y-%m-%d %H:%i')
                and date_format(login_time, '%Y-%m-%d %H:%i') <![CDATA[ <= ]]> date_format(#{ed}, '%Y-%m-%d %H:%i')
            </if>
        </where>
        order by visit_time desc
    </select>

    <!--
        TODO
        根据用户账号，登录IP进行统计
        user_account,client_ip,operating_system_name,browser
    -->
    <select id="countUserGuest" resultType="java.util.HashMap">
        select date_format(last_time, '%m-%d') lrtime, count(0) lrcount from (
          select last_time from t_sys_monitor_login_record
            where date_format(last_time, '%Y-%m-%d') <![CDATA[ >= ]]> date_format(#{startDate}, '%Y-%m-%d')
                and date_format(last_time, '%Y-%m-%d') <![CDATA[ <= ]]> date_format(#{endDate}, '%Y-%m-%d')
            group by ${groupByName}, date_format(last_time, '%Y-%m-%d')) tempdata
        group by date_format(last_time, '%Y-%m-%d') order by last_time asc
    </select>

    <select id="getLastLoginRecord" resultMap="loginRecordMap">
        select * from t_sys_monitor_login_record where logout_time is not null and user_account = #{userAccount} order by login_time desc limit 1
    </select>

    <select id="getUserLoginRecordDate" resultType="java.util.Map">
        select
            count(0) lr_count,
            concat(date_format(login_time, '%Y'), '-order') lr_login_time
        from t_sys_monitor_login_record lr
        where user_account = #{userAccount} and lr_online = 'false' group by lr_login_time
        union
        select
            count(0) lr_count,
            concat(date_format(login_time, '%Y-%m'), '-order') lr_login_time
        from t_sys_monitor_login_record
        where user_account = #{userAccount} and lr_online = 'false' group by lr_login_time
        union
        select
            count(0) lr_count,
            date_format(login_time, '%Y-%m-%d') lr_login_time
        from t_sys_monitor_login_record
        where user_account = #{userAccount} and lr_online = 'false' group by lr_login_time  order by lr_login_time desc
    </select>

    <select id="getUserLoginRecordsByDay" resultMap="loginRecordMap">
        select * from t_sys_monitor_login_record
          where user_account = #{userAccount}
          and date_format(login_time, '%Y-%m-%d') = #{day}
          and lr_online = 'false'
          order by login_time desc
    </select>

    <select id="getOnlineUserByAccount" resultMap="loginRecordMap">
        select * from t_sys_monitor_login_record
          where user_account = #{userAccount}
          and lr_online = 'true'
          order by login_time desc
    </select>

</mapper>