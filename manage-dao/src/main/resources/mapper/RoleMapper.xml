<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozf.laiyw.manage.dao.mapper.RoleMapper">

    <resultMap id="roleMap" type="com.ozf.laiyw.manage.model.Role">
        <id property="id" column="r_id"/>
        <result property="name" column="r_name"/>
        <result property="type" column="r_type"/>
        <result property="updateTime" column="r_update_time"/>
        <result property="description" column="r_description"/>
        <result property="status" column="r_status"/>
        <result property="menuIds" column="menu_ids"/>
    </resultMap>

    <select id="findRoleById" resultMap="roleMap">
        select r.*, group_concat(m.m_id) as menu_ids from t_sys_role r left join t_sys_role_menu m on r.r_id = m.r_id  where r.r_id = #{id}
    </select>

    <update id="updateRoleStatus">
        update t_sys_role set r_status = 0 where r_id = #{id}
    </update>

    <delete id="removeRoleMenuByRoleId">
        delete from t_sys_role_menu where r_id = #{roleId}
    </delete>

    <insert id="saveRoleMenu">
        insert into t_sys_role_menu (r_id, m_id)
        values
        <foreach collection="menuIds" item="mid" index="index" separator=",">
            (#{roleId}, #{mid})
        </foreach>
    </insert>

    <insert id="saveRole" parameterType="com.ozf.laiyw.manage.model.Role">
        insert into t_sys_role(
          r_id,
          r_name,
          r_type,
          r_update_time,
          r_description
        )
        values(
          #{id, jdbcType=VARCHAR},
          #{name , jdbcType=VARCHAR},
          #{type , jdbcType=VARCHAR},
          #{updateTime , jdbcType=VARCHAR},
          #{description , jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateRole" parameterType="com.ozf.laiyw.manage.model.Role">
        update t_sys_role
        set
          r_name = #{name , jdbcType=VARCHAR},
          r_type = #{type , jdbcType=VARCHAR},
          r_update_time = #{updateTime , jdbcType=VARCHAR},
          r_description = #{description , jdbcType=VARCHAR}
        where r_id = #{id}
    </update>

    <select id="getRoles" resultMap="roleMap">
        select * from t_sys_role
        <where>
            r_status = 1
            <if test="name != null and name != ''">
                <bind name="pattern" value="'%' + name + '%'"/>
                and r_name like #{pattern}
            </if>
            <if test="type != null and type != ''">
                and r_type = #{type}
            </if>
        </where>
        order by r_name
    </select>

</mapper>