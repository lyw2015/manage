<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozf.laiyw.manage.dao.mapper.UserMapper">

    <resultMap id="userMap" type="com.ozf.laiyw.manage.model.User">
        <id property="id" column="user_id"/>
        <result property="type" column="user_type"/>
        <result property="account" column="user_account"/>
        <result property="password" column="user_password"/>
        <result property="username" column="user_name"/>
        <result property="sex" column="user_sex"/>
        <result property="mailbox" column="user_mailbox"/>
        <result property="phone" column="user_phone"/>
        <result property="officePhone" column="user_office_phone"/>
        <result property="status" column="user_status"/>
        <result property="headImg" column="user_head_img"/>
        <result property="description" column="user_description"/>
        <result property="organizationId" column="user_organization_id"/>
        <result property="createTime" column="user_create_time"/>
        <result property="updateTime" column="user_update_time"/>
        <result property="roleIds" column="user_role_ids"/>
        <result property="roleNames" column="user_role_names"/>
        <result property="organizationName" column="user_organization_name"/>
    </resultMap>

    <select id="queryUser" resultMap="userMap">
        select distinct
        u.*,
        o.o_name as user_organization_name,
        (
        select group_concat(zr.r_name) from t_sys_user_role zur
        left join t_sys_role zr on zur.r_id = zr.r_id where zur.u_id = u.user_id
        ) as user_role_names
        from t_sys_user u
        left join t_sys_organization o on u.user_organization_id = o.o_id
        left join t_sys_user_role ur on ur.u_id = u.user_id
        left join t_sys_role r on ur.r_id = r.r_id
        <where>
            u.user_status != 0
            <if test="organizationId != null and organizationId != ''">
                and o.o_id = #{organizationId}
            </if>
            <if test="roleId != null and roleId != ''">
                and r.r_id = #{roleId}
            </if>
            <if test="type != null and type != ''">
                and u.user_type = #{type}
            </if>
            <if test="username != null and username != ''">
                <bind name="pattern" value="'%' + username + '%'"/>
                and u.user_name like #{pattern}
            </if>
            <if test="account != null and account != ''">
                <bind name="pattern" value="'%' + account + '%'"/>
                and u.user_account like #{pattern}
            </if>
            <if test="mailbox != null and mailbox != ''">
                <bind name="pattern" value="'%' + mailbox + '%'"/>
                and u.user_mailbox like #{pattern}
            </if>
            <if test="phone != null and phone != ''">
                <bind name="pattern" value="'%' + phone + '%'"/>
                and u.user_phone like #{pattern}
            </if>
            <if test="officePhone != null and officePhone != ''">
                <bind name="pattern" value="'%' + officePhone + '%'"/>
                and u.user_office_phone like #{pattern}
            </if>
            <if test="status != null">
                and u.user_status = #{status}
            </if>
        </where>
        order by u.user_name desc
    </select>

    <delete id="removeUserRoleByUserId">
        delete from t_sys_user_role where u_id = #{userId}
    </delete>

    <insert id="saveUserRole">
        insert into t_sys_user_role (u_id, r_id)
        values
        <foreach collection="roleIds" item="rid" index="index" separator=",">
            (#{userId}, #{rid})
        </foreach>
    </insert>

    <update id="updateUserStatus">
        update t_sys_user set user_status = #{status} where user_id = #{id}
    </update>

    <select id="getUserById" resultMap="userMap">
        select
          u.*,
          o.o_name as user_organization_name,
          group_concat(ur.r_id) as user_role_ids
        from t_sys_user u
        left join t_sys_organization o on u.user_organization_id = o.o_id
        left join t_sys_user_role ur on u.user_id = ur.u_id
        where u.user_id = #{id}
    </select>

    <insert id="saveUser" parameterType="com.ozf.laiyw.manage.model.User">
        insert into t_sys_user(
        user_id,
        user_type,
        user_account,
        user_password,
        user_name,
        user_sex,
        user_mailbox,
        user_phone,
        user_office_phone,
        user_description,
        user_organization_id,
        user_create_time,
        user_update_time
        )values(
        #{id , jdbcType=VARCHAR},
        #{type , jdbcType=VARCHAR},
        #{account , jdbcType=VARCHAR},
        #{password , jdbcType=VARCHAR},
        #{username , jdbcType=VARCHAR},
        #{sex , jdbcType=VARCHAR},
        #{mailbox , jdbcType=VARCHAR},
        #{phone , jdbcType=VARCHAR},
        #{officePhone , jdbcType=VARCHAR},
        #{description , jdbcType=VARCHAR},
        #{organizationId , jdbcType=VARCHAR},
        #{createTime , jdbcType=VARCHAR},
        #{updateTime , jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateUser" parameterType="com.ozf.laiyw.manage.model.User">
        update t_sys_user set
        user_type = #{type , jdbcType=VARCHAR},
        user_name = #{username , jdbcType=VARCHAR},
        user_sex = #{sex , jdbcType=VARCHAR},
        user_mailbox = #{mailbox , jdbcType=VARCHAR},
        user_phone = #{phone , jdbcType=VARCHAR},
        user_office_phone = #{officePhone , jdbcType=VARCHAR},
        user_description = #{description , jdbcType=VARCHAR},
        user_organization_id = #{organizationId , jdbcType=VARCHAR},
        user_update_time = #{updateTime , jdbcType=VARCHAR}
        where user_id = #{id , jdbcType=VARCHAR}
    </update>

    <select id="findUserByAccountOrMailbox" resultMap="userMap">
        select
        u.*,
        o.o_name as user_organization_name,
        (
        select group_concat(zr.r_name) from t_sys_user_role zur
        left join t_sys_role zr on zur.r_id = zr.r_id where zur.u_id = u.user_id
        ) as user_role_names
        from t_sys_user u
        left join t_sys_organization o on u.user_organization_id = o.o_id
        where (u.user_account = #{userAccount} or u.user_mailbox = #{userAccount}) and u.user_status != 0
    </select>

    <select id="countTodayNewUser" resultType="java.lang.Integer">
        select count(0) from t_sys_user where user_create_time like concat(date_format(now(), '%Y-%m-%d'), '%');
    </select>

    <select id="getUserByAccount" resultMap="userMap">
        select * from t_sys_user where user_account = #{account} and user_status != 0
    </select>

    <select id="getUserByEmail" resultMap="userMap">
        select * from t_sys_user where user_mailbox = #{email} and user_status != 0
    </select>

    <select id="countUnCurrentUserEmail" resultType="java.lang.Integer">
        select count(0) from t_sys_user
        where user_status != 0 and user_mailbox = #{email} and user_id != #{id}
    </select>

    <update id="updateUserPwd">
        update t_sys_user set user_password = #{password} where user_id = #{id}
    </update>

    <update id="updateUserInfo">
        update t_sys_user set
        user_name = #{username , jdbcType=VARCHAR},
        user_sex = #{sex , jdbcType=VARCHAR},
        user_mailbox = #{mailbox , jdbcType=VARCHAR},
        user_phone = #{phone , jdbcType=VARCHAR},
        user_office_phone = #{officePhone , jdbcType=VARCHAR},
        where user_id = #{id}
    </update>

</mapper>